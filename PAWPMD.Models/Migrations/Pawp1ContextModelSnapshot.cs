// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PAWPMD.Models;

#nullable disable

namespace PAWPMD.Models.Migrations
{
    [DbContext(typeof(Pawp1Context))]
    partial class Pawp1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PAWPMD.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A10228A4C");

                    b.HasIndex(new[] { "Name" }, "UQ__Roles__737584F68DCFB241")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PAWPMD.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C92C0D2CD");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E46065152A")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534CB0F9C61")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PAWPMD.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__User_Rol__3214EC071D5DB860");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Roles", (string)null);
                });

            modelBuilder.Entity("PAWPMD.Models.UserWidget", b =>
                {
                    b.Property<int>("UserWidgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserWidgetId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsFavorite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PositionX")
                        .HasColumnType("int");

                    b.Property<int>("PositionY")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("UserWidgetId")
                        .HasName("PK__User_Wid__93DA71D217BBE97A");

                    b.HasIndex("UserId");

                    b.HasIndex("WidgetId");

                    b.ToTable("User_Widgets", (string)null);
                });

            modelBuilder.Entity("PAWPMD.Models.Widget", b =>
                {
                    b.Property<int>("WidgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WidgetId"));

                    b.Property<string>("Apiendpoint")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("APIEndpoint");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("RequiresApiKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WidgetId")
                        .HasName("PK__Widgets__ADFD30127DD2AE80");

                    b.HasIndex("UserId");

                    b.ToTable("Widgets");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Widget_C__19093A0B586B8DB0");

                    b.HasIndex(new[] { "Name" }, "UQ__Widget_C__737584F676D6B6B4")
                        .IsUnique();

                    b.ToTable("Widget_Categories", (string)null);
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetCategory1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WidgetId");

                    b.ToTable("WidgetCategories1");
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetSetting", b =>
                {
                    b.Property<int>("WidgetSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WidgetSettingsId"));

                    b.Property<string>("Settings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserWidgetId")
                        .HasColumnType("int");

                    b.HasKey("WidgetSettingsId")
                        .HasName("PK__WidgetSe__C6BCB3C72DD79C30");

                    b.HasIndex("UserWidgetId");

                    b.ToTable("WidgetSettings");
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetImage", b =>
                {
                    b.HasBaseType("PAWPMD.Models.Widget");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ImageAltText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThemeConfig")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Widget_Image", (string)null);
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetTable", b =>
                {
                    b.HasBaseType("PAWPMD.Models.Widget");

                    b.Property<string>("Columns")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Headers")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Rows")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThemeConfig")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Widget_Table", (string)null);
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetVideo", b =>
                {
                    b.HasBaseType("PAWPMD.Models.Widget");

                    b.Property<TimeOnly?>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThemeConfig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoAltText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VideoTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("Widget_Video", (string)null);
                });

            modelBuilder.Entity("PAWPMD.Models.UserRole", b =>
                {
                    b.HasOne("PAWPMD.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Role__RoleI__412EB0B6");

                    b.HasOne("PAWPMD.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Role__UserI__403A8C7D");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PAWPMD.Models.UserWidget", b =>
                {
                    b.HasOne("PAWPMD.Models.User", "User")
                        .WithMany("UserWidgets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Widg__UserI__4BAC3F29");

                    b.HasOne("PAWPMD.Models.Widget", "Widget")
                        .WithMany("UserWidgets")
                        .HasForeignKey("WidgetId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Widg__Widge__4CA06362");

                    b.Navigation("User");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("PAWPMD.Models.Widget", b =>
                {
                    b.HasOne("PAWPMD.Models.User", "User")
                        .WithMany("Widgets")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Widgets__UserId__45F365D3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetCategory1", b =>
                {
                    b.HasOne("PAWPMD.Models.WidgetCategory", "Category")
                        .WithMany("WidgetCategory1s")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PAWPMD.Models.Widget", "Widget")
                        .WithMany("WidgetCategory1s")
                        .HasForeignKey("WidgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetSetting", b =>
                {
                    b.HasOne("PAWPMD.Models.UserWidget", "UserWidget")
                        .WithMany("WidgetSettings")
                        .HasForeignKey("UserWidgetId")
                        .IsRequired()
                        .HasConstraintName("FK__WidgetSet__UserW__6FE99F9F");

                    b.Navigation("UserWidget");
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetImage", b =>
                {
                    b.HasOne("PAWPMD.Models.Widget", "Widget")
                        .WithMany("WidgetImages")
                        .HasForeignKey("WidgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Widget_Image_Widgets");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetTable", b =>
                {
                    b.HasOne("PAWPMD.Models.Widget", "Widget")
                        .WithMany("WidgetTables")
                        .HasForeignKey("WidgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Widget_Table_Widgets");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetVideo", b =>
                {
                    b.HasOne("PAWPMD.Models.Widget", "Widget")
                        .WithMany("WidgetVideos")
                        .HasForeignKey("WidgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Widget_Video_Widgets");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("PAWPMD.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("PAWPMD.Models.User", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("UserWidgets");

                    b.Navigation("Widgets");
                });

            modelBuilder.Entity("PAWPMD.Models.UserWidget", b =>
                {
                    b.Navigation("WidgetSettings");
                });

            modelBuilder.Entity("PAWPMD.Models.Widget", b =>
                {
                    b.Navigation("UserWidgets");

                    b.Navigation("WidgetCategory1s");

                    b.Navigation("WidgetImages");

                    b.Navigation("WidgetTables");

                    b.Navigation("WidgetVideos");
                });

            modelBuilder.Entity("PAWPMD.Models.WidgetCategory", b =>
                {
                    b.Navigation("WidgetCategory1s");
                });
#pragma warning restore 612, 618
        }
    }
}
